import java.util.*;

class Node {
    int data;
    Node next;
    Node prev; // Add a previous pointer for the doubly linked list

    Node(int data) {
        this.data = data;
        this.next = null;
        this.prev = null;
    }
}

public class Main {
    public static void main(String[] args) {
        // Create nodes
        Node node1 = new Node(10);
        Node node2 = new Node(20);
        Node node3 = new Node(30);
        Node node4 = new Node(40);
        Node node5 = new Node(50);

        // Link nodes to form a doubly linked list
        node1.next = node2;
        node2.prev = node1;
        node2.next = node3;
        node3.prev = node2;
        node3.next = node4;
        node4.prev = node3;
        node4.next = node5;
        node5.prev = node4;

        // Head pointer
        Node head = node1;

        // Forward traversal
        System.out.println("The linked list in forward order:");
        Node temp = head;
        while (temp != null) {
            System.out.print(temp.data + " <-> ");
            temp = temp.next;
        }
        System.out.println("null");

        // Backward traversal
        System.out.println("The linked list in backward order:");
        Node tail = node5; // Start from the last node
        while (tail != null) {
            System.out.print(tail.data + " <-> ");
            tail = tail.prev;
        }
        System.out.println("null");
    }
}
